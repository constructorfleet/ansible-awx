---
#- name: Export tower assets to refresh playbook data
#  awx.awx.tower_receive:
#    all: True
#    validate_certs: no
#    tower_host: "{{ awx_web_url }}"
#    tower_username: "{{ awx_admin_user }}"
#    tower_password: "{{ awx_admin_password }}"
#  register: towerassets

- name: Create Tower job templates
  awx.awx.tower_job_template:
    name: "{{ item.name }}"
    description: "{{ item.description | default(omit) }}"
    project: "{{ item.project }}"
    playbook: "{{ item.playbook }}"
    job_type: "{{ item.job_type | default('run') }}"
    fact_caching_enabled: "{{ item.fact_caching_enabled | default(omit) }}"
    diff_mode_enabled: "{{ item.diff_mode_enabled | default(omit) }}"
    concurrent_jobs_enabled: "{{ item.concurrent_jobs_enabled | default(omit) }}"
    force_handlers_enabled: "{{ item.force_handlers_enabled | default(omit) }}"
    survey_enabled: "{{ item.survey_enabled | default(omit) }}"
    host_config_key: "{{ item.host_config_key | default(omit) }}"
    survey_spec: "{{ item.survey_spec | from_yaml | default(omit) }}"
    become_enabled: "{{ item.become_enabled | default(omit) }}"
    ask_credential: "{{ item.ask_credential | default(omit) }}"
    ask_diff_mode: "{{ item.ask_diff_mode | default(omit) }}"
    ask_extra_vars: "{{ item.ask_extra_vars | default(omit) }}"
    ask_inventory: "{{ item.ask_inventory | default(omit) }}"
    ask_job_type: "{{ item.ask_job_type | default(omit) }}"
    ask_limit: "{{ item.ask_limit | default(omit) }}"
    ask_skip_tags: "{{ item.ask_skip_tags | default(omit) }}"
    ask_tags: "{{ item.ask_tags | default(omit) }}"
    ask_verbosity: "{{ item.ask_verbosity | default(omit) }}"
    skip_tags: "{{ item.skip_tags | default(omit) }}"
    limit: "{{ item.limit | default(omit) }}"
    job_tags: "{{ item.job_tags | default(omit) }}"
    start_at_task: "{{ item.start_at_task | default(omit) }}"
    verbosity: "{{ item.verbosity | default('0') }}"
    inventory: "{{ item.inventory | default(omit) }}"
    extra_vars: "{{ item.extra_vars | default(omit) }}"
    credentials: "{{ item.credentials | default(omit) }}"
    webhook_service: "{{ item.webhook_service | default(omit) }}"
    webhook_credential: "{{ item.webhook_credential | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    validate_certs: no
    tower_host: "{{ awx_web_url }}"
    tower_username: "{{ awx_admin_user }}"
    tower_password: "{{ awx_admin_password }}"
  loop: "{{ awx_job_templates }}"
  loop_control:
    label: "{{ item.name }}"
  register: template_import
  when:
    - awx_job_templates is defined
    - awx_job_templates != None
#  changed_when: False

- name: Debug import results
  ansible.builtin.debug:
    msg: "{{ item }}"
    verbosity: 1
  loop: "{{ template_import.results }}"
  when:
    - template_import is defined
    - template_import.results != None
    - item.item.host_config_key is defined

- name: "Set Fact for Job IDs"
  ansible.builtin.set_fact:
    "{{ item.item.name | lower | regex_replace('(?:[^\\w]+)', '_') }}_job_id": "{{ item.id }}"
    cacheable: yes
  loop: "{{ template_import.results }}"
  loop_control:
    label: "{{ item.item.name }}"
  register: job_template_facts
  when:
    - template_import is defined
    - template_import.results != None
    - item.item.host_config_key is defined

- name: 'Set Foreman Global Parameter "host_configure_job_id"'
  ansible.builtin.command: hammer -r global-parameter set --name  host_configure_job_id --parameter-type integer --value {{ host_configure_job_id }}
  changed_when: False
  when:
    - host_configure_job_id is defined
    - host_configure_job_id != None
